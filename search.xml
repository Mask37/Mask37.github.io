<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>重写与重载之间的区别</title>
      <link href="/archives/13268.html"/>
      <url>/archives/13268.html</url>
      
        <content type="html"><![CDATA[<h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><table><thead><tr><th>区别点</th><th>重载方法</th><th>重写方法</th></tr></thead><tbody><tr><td>参数列表</td><td>必须修改</td><td>一定不能修改</td></tr><tr><td>返回类型</td><td>可以修改</td><td>一定不能修改</td></tr><tr><td>异常</td><td>可以修改</td><td>可以减少或删除，一定不能抛出新的或者更广的异常</td></tr><tr><td>访问</td><td><span style="color: #ff1493;">可以修改</span></td><td>一定不能做更严格的限制（可以降低限制）</td></tr></tbody></table><span id="more"></span><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>方法的重写(Overriding)和重载(Overloading)是java多态性的不同表现，重写是父类与子类之间多态性的一种表现，重载可以理解成多态的具体表现形式。</p><ul><li>方法重载是一个类中定义了多个方法名相同，而他们的参数的数量不同或者数量相同而类型和次序不同，则称为方法的重载（overloading）。</li><li>方法重写在子类存在与父类的方法的名字相同，而且参数的个数于类型一样，返回的类型也一致，就称为方法的重写（overriding）</li><li>方法的重载是一个类的多态性表现，而方法的重写是子类与父类的一种多态性表现。</li></ul><p><img src="https://gitee.com/gzl_admin/picture_bed/raw/master/img/202112/20211230215337.png"><br><img src="https://gitee.com/gzl_admin/picture_bed/raw/master/img/202112/20211230215346.png"></p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 重写 </tag>
            
            <tag> 重载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/16107.html"/>
      <url>/archives/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 下载excel公共接口 * * @param param * @return excel文件流 */</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">commonDownLoad</span><span class="token punctuation">(</span><span class="token class-name">DownloadParam</span> param<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 1.根据 请求的code查询downLoadPageTypeMap里对应cts的pageCode</span><span class="token class-name">AssertUtils</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>downLoadPageTypeMap<span class="token punctuation">,</span> <span class="token string">"CTS下载编码未配置"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> ctsPageCode <span class="token operator">=</span> downLoadPageTypeMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AssertUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>ctsPageCode<span class="token punctuation">,</span> <span class="token string">"CTS下载编码未配置"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2.根据 cts的pageCode查询cts服务找到自定义列</span><span class="token class-name">CustomerColumnResponse</span> columnResponse <span class="token operator">=</span> <span class="token function">getCustomerColumnByPageCode</span><span class="token punctuation">(</span>ctsPageCode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AssertUtils</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>columnResponse<span class="token punctuation">,</span> <span class="token string">"CTS下载编码不正确"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">ExcelExportMethodInfo</span> excelExportMethodInfo <span class="token operator">=</span> excelExportHandler<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> excelExportMethodInfo<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下载编码:&#123;&#125;,未找到对应下载方法,不执行查询与下载"</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">String</span> pageName <span class="token operator">=</span> excelExportMethodInfo<span class="token punctuation">.</span><span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 3.反射调用</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>result <span class="token operator">=</span> commonCallMethod<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>excelExportMethodInfo<span class="token punctuation">,</span> param<span class="token punctuation">.</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span><span class="token function">getFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>pageName <span class="token operator">+</span> <span class="token string">"-列表查询接口异常："</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span>pageName <span class="token operator">+</span> <span class="token string">"-列表查询接口异常:"</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 校验 返回是否为空</span><span class="token class-name">AssertUtils</span><span class="token punctuation">.</span><span class="token function">notEmpty</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> pageName <span class="token operator">+</span> <span class="token string">"查询为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 5.筛选 cts自定义列</span><span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> contentMap <span class="token operator">=</span> <span class="token class-name">ExportUtil</span><span class="token punctuation">.</span><span class="token function">parseExpContent</span><span class="token punctuation">(</span>columnResponse<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> headers <span class="token operator">=</span> contentMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"headers"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ds_titles <span class="token operator">=</span> contentMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"ds_titles"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> widths <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">String</span> nameFlag <span class="token operator">=</span> pageName <span class="token operator">+</span> <span class="token class-name">DateParser</span><span class="token punctuation">.</span><span class="token function">formatDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HSSFWorkbook</span> wb <span class="token operator">=</span> <span class="token class-name">PoiExcelUtil</span><span class="token punctuation">.</span><span class="token function">createWorkbook</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> pageName<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> ds_titles<span class="token punctuation">,</span> widths<span class="token punctuation">,</span> result<span class="token punctuation">,</span> <span class="token class-name">DateParser</span><span class="token punctuation">.</span>FORMAT_STR_WITH_TIME_S<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token comment">// 6.输出 excel文件流</span><span class="token class-name">PoiExcelUtil</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> response<span class="token punctuation">,</span> nameFlag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>pageName <span class="token operator">+</span> <span class="token string">"列表导出失败："</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
